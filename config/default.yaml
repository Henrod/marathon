# marathon
# https://github.com/topfreegames/marathon
# Licensed under the MIT license:
# http://www.opensource.org/licenses/mit-license
# Copyright Â© 2016 Top Free Games <backend@tfgco.com>

---
app:
  log:
    level: debug
    logToStdOut: true
    logToFile: false
    file: /tmp/marathon.log
  name: Marathon
  worker:
    loopTimeout: 1000
  services:
    redis:
      url: //localhost:22223
      db: 0
      password: ''
      shouldReconnect: true
    kue:
      prefix: marathon
    postgresql:
      url: postgresql://marathon@localhost:22222/marathon
      options:
        native: true
        ssl: false
        logging: false
    kafka:
      api:
        client:
          url: localhost:22224
          clientId: marathonApiProducer
        producer:
          # Configuration for when to consider a message as acknowledged, default 1
          requireAcks: 1
          # The amount of time in milliseconds to wait for all acks before considered, default 100ms
          ackTimeoutMs: 100
          # Partitioner type (default = 0, random = 1, cyclic = 2, keyed = 3), default 0
          partitionerType: 0
          topicName: 'marathonjobs'
        consumer:
          # ZooKeeper URL
          url: localhost:22224
          # Consumer group ID
          groupId: 'marathonjobs'
          sessionTimeout: 15000
          # An array of partition assignment protocols ordered by preference.
          # 'roundrobin' or 'range' string for built ins (see below to pass in custom assignment protocol)
          protocol: ['roundrobin']
          # Offsets to use for new groups other options could be 'earliest' or 'none' (none will emit an error if no offsets were saved)
          # equivalent to Java client's auto.offset.reset
          fromOffset: 'latest' # default
  port: 9000
